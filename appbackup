from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from geoalchemy2.types import Geometry
import geoalchemy2.functions as func
import psycopg2
from sqlalchemy.ext.declarative import declarative_base
Base = declarative_base()
from sqlalchemy import orm
from sqlalchemy import Table, MetaData
from sqlalchemy import create_engine
import models

engine = create_engine('SELECT* from firehydjson')

meta = MetaData()
meta.reflect(engine)
fire = meta.tables['firehydjson']
addresses_table = meta.tables['addresses']


app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://Web:web@localhost/flaskmusic'
db = SQLAlchemy(app)
app.debug = True

#conn = psycopg2.connect("dbname='flaskmusic' user='Web'host='localhost' password='web'")
#cur = conn.cursor()
#a = '''SELECT* FROM firehydjson UNION ALL SELECT* FROM sysvalvejson'''
#cur.execute(a)

@app.route('/')
def layers_point():
    jsonlist = fire
    #jsonlist = cur.fetchall()
    #jsonlist = db.session.query(db.Base.Fire).all()
    return render_template('map.html', jsonlist=jsonlist)


if __name__ == "__main__":
    app.run()